// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: internal/rpc/proto/task.proto

package rpc

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MonitorConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
}

func (x *MonitorConfRequest) Reset() {
	*x = MonitorConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_proto_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorConfRequest) ProtoMessage() {}

func (x *MonitorConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorConfRequest.ProtoReflect.Descriptor instead.
func (*MonitorConfRequest) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_task_proto_rawDescGZIP(), []int{0}
}

func (x *MonitorConfRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

type MonitorConfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confs []*MonitorConf `protobuf:"bytes,1,rep,name=confs,proto3" json:"confs,omitempty"`
}

func (x *MonitorConfResponse) Reset() {
	*x = MonitorConfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_proto_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorConfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorConfResponse) ProtoMessage() {}

func (x *MonitorConfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorConfResponse.ProtoReflect.Descriptor instead.
func (*MonitorConfResponse) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_task_proto_rawDescGZIP(), []int{1}
}

func (x *MonitorConfResponse) GetConfs() []*MonitorConf {
	if x != nil {
		return x.Confs
	}
	return nil
}

type MonitorConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module       string `protobuf:"bytes,1,opt,name=Module,proto3" json:"Module,omitempty"`
	Cwd          string `protobuf:"bytes,2,opt,name=Cwd,proto3" json:"Cwd,omitempty"`
	Env          string `protobuf:"bytes,3,opt,name=Env,proto3" json:"Env,omitempty"`
	Contact      string `protobuf:"bytes,4,opt,name=Contact,proto3" json:"Contact,omitempty"`
	Cmdline      string `protobuf:"bytes,5,opt,name=Cmdline,proto3" json:"Cmdline,omitempty"`
	Script       string `protobuf:"bytes,6,opt,name=Script,proto3" json:"Script,omitempty"`
	Procnum      int64  `protobuf:"varint,7,opt,name=Procnum,proto3" json:"Procnum,omitempty"`
	Logpath      string `protobuf:"bytes,8,opt,name=Logpath,proto3" json:"Logpath,omitempty"`
	Lognum       int64  `protobuf:"varint,9,opt,name=Lognum,proto3" json:"Lognum,omitempty"`
	Logsize      int64  `protobuf:"varint,10,opt,name=Logsize,proto3" json:"Logsize,omitempty"`
	Cmd          string `protobuf:"bytes,11,opt,name=Cmd,proto3" json:"Cmd,omitempty"`
	Restartlimit int64  `protobuf:"varint,12,opt,name=Restartlimit,proto3" json:"Restartlimit,omitempty"`
}

func (x *MonitorConf) Reset() {
	*x = MonitorConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_proto_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorConf) ProtoMessage() {}

func (x *MonitorConf) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorConf.ProtoReflect.Descriptor instead.
func (*MonitorConf) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_task_proto_rawDescGZIP(), []int{2}
}

func (x *MonitorConf) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *MonitorConf) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

func (x *MonitorConf) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *MonitorConf) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *MonitorConf) GetCmdline() string {
	if x != nil {
		return x.Cmdline
	}
	return ""
}

func (x *MonitorConf) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *MonitorConf) GetProcnum() int64 {
	if x != nil {
		return x.Procnum
	}
	return 0
}

func (x *MonitorConf) GetLogpath() string {
	if x != nil {
		return x.Logpath
	}
	return ""
}

func (x *MonitorConf) GetLognum() int64 {
	if x != nil {
		return x.Lognum
	}
	return 0
}

func (x *MonitorConf) GetLogsize() int64 {
	if x != nil {
		return x.Logsize
	}
	return 0
}

func (x *MonitorConf) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *MonitorConf) GetRestartlimit() int64 {
	if x != nil {
		return x.Restartlimit
	}
	return 0
}

type ProcessEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleName string `protobuf:"bytes,1,opt,name=ModuleName,proto3" json:"ModuleName,omitempty"`
	Env        string `protobuf:"bytes,2,opt,name=Env,proto3" json:"Env,omitempty"`
	StopTime   string `protobuf:"bytes,3,opt,name=StopTime,proto3" json:"StopTime,omitempty"`
	StartTime  string `protobuf:"bytes,4,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	CostTime   string `protobuf:"bytes,5,opt,name=CostTime,proto3" json:"CostTime,omitempty"`
	Host       string `protobuf:"bytes,6,opt,name=Host,proto3" json:"Host,omitempty"`
	EventType  int64  `protobuf:"varint,7,opt,name=EventType,proto3" json:"EventType,omitempty"`
	MailList   string `protobuf:"bytes,8,opt,name=MailList,proto3" json:"MailList,omitempty"`
}

func (x *ProcessEventRequest) Reset() {
	*x = ProcessEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_proto_task_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEventRequest) ProtoMessage() {}

func (x *ProcessEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_task_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEventRequest.ProtoReflect.Descriptor instead.
func (*ProcessEventRequest) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_task_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessEventRequest) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *ProcessEventRequest) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *ProcessEventRequest) GetStopTime() string {
	if x != nil {
		return x.StopTime
	}
	return ""
}

func (x *ProcessEventRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ProcessEventRequest) GetCostTime() string {
	if x != nil {
		return x.CostTime
	}
	return ""
}

func (x *ProcessEventRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ProcessEventRequest) GetEventType() int64 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *ProcessEventRequest) GetMailList() string {
	if x != nil {
		return x.MailList
	}
	return ""
}

type ProcessEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int64  `protobuf:"varint,1,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ProcessEventResponse) Reset() {
	*x = ProcessEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_proto_task_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEventResponse) ProtoMessage() {}

func (x *ProcessEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_proto_task_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEventResponse.ProtoReflect.Descriptor instead.
func (*ProcessEventResponse) Descriptor() ([]byte, []int) {
	return file_internal_rpc_proto_task_proto_rawDescGZIP(), []int{4}
}

func (x *ProcessEventResponse) GetStatusCode() int64 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ProcessEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_internal_rpc_proto_task_proto protoreflect.FileDescriptor

var file_internal_rpc_proto_task_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x72, 0x70, 0x63, 0x22, 0x28, 0x0a, 0x12, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x3d,
	0x0a, 0x13, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x05, 0x63, 0x6f, 0x6e, 0x66, 0x73, 0x22, 0xb1, 0x02,
	0x0a, 0x0b, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x16, 0x0a,
	0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x43, 0x77, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x6e, 0x76, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x6e, 0x75, 0x6d,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x6e, 0x75, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4c, 0x6f, 0x67, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x67,
	0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4c, 0x6f, 0x67, 0x6e, 0x75,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x4c, 0x6f, 0x67, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x43,
	0x6d, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x43, 0x6d, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0xeb, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x76,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x6e, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53,
	0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x50, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x32, 0x53, 0x0a, 0x11, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x47, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x5c, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x18, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_rpc_proto_task_proto_rawDescOnce sync.Once
	file_internal_rpc_proto_task_proto_rawDescData = file_internal_rpc_proto_task_proto_rawDesc
)

func file_internal_rpc_proto_task_proto_rawDescGZIP() []byte {
	file_internal_rpc_proto_task_proto_rawDescOnce.Do(func() {
		file_internal_rpc_proto_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_rpc_proto_task_proto_rawDescData)
	})
	return file_internal_rpc_proto_task_proto_rawDescData
}

var file_internal_rpc_proto_task_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_internal_rpc_proto_task_proto_goTypes = []interface{}{
	(*MonitorConfRequest)(nil),   // 0: rpc.MonitorConfRequest
	(*MonitorConfResponse)(nil),  // 1: rpc.MonitorConfResponse
	(*MonitorConf)(nil),          // 2: rpc.MonitorConf
	(*ProcessEventRequest)(nil),  // 3: rpc.ProcessEventRequest
	(*ProcessEventResponse)(nil), // 4: rpc.ProcessEventResponse
}
var file_internal_rpc_proto_task_proto_depIdxs = []int32{
	2, // 0: rpc.MonitorConfResponse.confs:type_name -> rpc.MonitorConf
	0, // 1: rpc.MonitorConfGetter.GetConf:input_type -> rpc.MonitorConfRequest
	3, // 2: rpc.ProcessEvent.ProcessEventHandler:input_type -> rpc.ProcessEventRequest
	1, // 3: rpc.MonitorConfGetter.GetConf:output_type -> rpc.MonitorConfResponse
	4, // 4: rpc.ProcessEvent.ProcessEventHandler:output_type -> rpc.ProcessEventResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_internal_rpc_proto_task_proto_init() }
func file_internal_rpc_proto_task_proto_init() {
	if File_internal_rpc_proto_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_rpc_proto_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_proto_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorConfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_proto_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_proto_task_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_proto_task_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_rpc_proto_task_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_internal_rpc_proto_task_proto_goTypes,
		DependencyIndexes: file_internal_rpc_proto_task_proto_depIdxs,
		MessageInfos:      file_internal_rpc_proto_task_proto_msgTypes,
	}.Build()
	File_internal_rpc_proto_task_proto = out.File
	file_internal_rpc_proto_task_proto_rawDesc = nil
	file_internal_rpc_proto_task_proto_goTypes = nil
	file_internal_rpc_proto_task_proto_depIdxs = nil
}
